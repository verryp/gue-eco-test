version: '3'

services:
  gue-product:
    container_name: gue-product
    build:
      context: .
      dockerfile: deployment/dockerfile-local
    hostname: gue-product
    working_dir: /go/src/github.com/verryp/gue-eco-test
    ports:
      - 9080:8081
    volumes:
      - .:/go/src/github.com/verryp/gue-eco-test
    networks:
      - gue-network
    depends_on:
      - gue-mariadb
    command: modd -f /go/product-reloader.conf
  gue-order:
    container_name: gue-order
    build:
      context: .
      dockerfile: deployment/dockerfile-local
    hostname: gue-order
    working_dir: /go/src/github.com/verryp/gue-eco-test
    ports:
      - 9081:8082
    volumes:
      - .:/go/src/github.com/verryp/gue-eco-test
    networks:
      - gue-network
    depends_on:
      - gue-mariadb
    command: modd -f /go/order-reloader.conf
  gue-auth:
    container_name: gue-auth
    build:
      context: .
      dockerfile: deployment/dockerfile-local
    hostname: gue-auth
    working_dir: /go/src/github.com/verryp/gue-eco-test
    ports:
      - 9082:8083
    volumes:
      - .:/go/src/github.com/verryp/gue-eco-test
    networks:
      - gue-network
    depends_on:
      - gue-mariadb
    command: modd -f /go/auth-reloader.conf
  gue-mariadb:
    container_name: gue-mariadb
    image: mariadb
    restart: always
    hostname: gue-mariadb
    environment:
      - MYSQL_USER=root
      - MYSQL_DATABASE=gue_eco_db
      - MYSQL_PASSWORD=root
      - MYSQL_ROOT_PASSWORD=root
      - TZ=Asia/Jakarta
    ports:
      - 3309:3306
    volumes:
      - gue-mariadb:/var/lib/mysql
    networks:
      - gue-network
  gue-redis:
    image: redis
    container_name: gue-redis
    hostname: gue-redis
    ports:
      - 6479:6379
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
    networks:
      - gue-network
  gue-gateway:
    platform: linux/amd64
    image: devopsfaith/krakend:2.4.0
    container_name: gue-gateway
    hostname: gue-gateway
    environment:
      - FC_OUT=/etc/krakend/flexible-krakend.json
      - FC_DEBUG=true
      - FC_ENABLE=1
      - FC_TEMPLATES=/etc/krakend/config/templates
      - FC_PARTIALS=/etc/krakend/config/partials
      - FC_SETTINGS=/etc/krakend/config/settings
    volumes:
      - ./internal/gateway:/etc/krakend
    ports:
      - "1234:1234"
      - "8080:8080"
      - "8090:8090"
    networks:
      - gue-network
    working_dir: /etc/krakend
    command: [ "run", "-d", "-c", "/etc/krakend/krakend.json" ]

volumes:
  gue-mariadb:
    driver: local
networks:
  gue-network:
    driver: bridge